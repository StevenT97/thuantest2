@model Models.FrameWork.PROPERTy
@using Models.FrameWork

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var db = new DemoPPCRentalEntities();
   
    var Quans = new SelectList(db.DISTRICT_Table, "ID", "DistrictName");
    var Duongs = new SelectList(db.STREETs.Take(0), "ID", "StreetName");
}
@section header{
    Create Property Agency
}

@using (Html.BeginForm("Create", "Login", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PROPERTy</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PropertyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PropertyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyName, "", new { @class = "text-danger" })
            </div>
        </div>
        @*Upload multi File*@
        <div class="form-group">
            <label class="control-label col-md-2">Upload File Details</label>
            @*@Html.LabelFor(model => model.Images, htmlAttributes: new { @})*@
            <div class="col-md-10">
                <input multiple type="file" name="files" value="Browse" />
            </div>
        </div>

        @if (ViewBag.UploadSuccess == true)
        {
            <span>Upload Completed Successfully</span>
        }

        @*End Upload multi File*@
        <div class="form-group">
            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" } })
                    Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })*@
                <input type="file" name="ImageFile2" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Images, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })*@
                <input type="file" name="ImageFile" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PropertyType_ID, "PropertyType_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PropertyType_ID", new SelectList(ViewBag.property_type, "ID", "CodeType"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PropertyType_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<textarea name="editor1"></textarea>*@
               
                @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
              
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                @*<script>

			CKEDITOR.replace( 'editor1' );

                </script>*@
                
            </div>
        </div>

      
        @*<div class="form-group">
            @Html.LabelFor(model => model.Ward_ID, "Ward_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Ward_ID", new SelectList(ViewBag.ward, "ID", "WardName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ward_ID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.District_ID, "District_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("District_ID", Quans, "Chọn quận...", new {@id= "District_ID" })
                @*@Html.DropDownList("District_ID", new SelectList(ViewBag.district, "ID", "DistrictName"), htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.District_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street_ID, "Street_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Street_ID", Duongs, "Chọn đường...", new { @id = "Street_ID" })


                @*@Html.DropDownList("Street_ID", new SelectList(ViewBag.street, "ID", "StreetName"), htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.Street_ID, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BedRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BedRoom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BedRoom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BathRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BathRoom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BathRoom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackingPlace, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackingPlace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PackingPlace, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", new SelectList(ViewBag.user, "ID", "FullName"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Created_at, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created_at, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created_at, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Create_post, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Create_post, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Create_post, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.Status_ID, "Status_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Status_ID", new SelectList(ViewBag.status, "ID", "Status_Name"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status_ID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Updated_at, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Updated_at, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Updated_at, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sale_ID, "Sale", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Sale", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Sale_ID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btn-create2" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js"></script>
    <script>
    $('#District_ID').select2();
    $('#Street_ID').select2();
    $('#District_ID').on('change', function () {
        $('#Street_ID').empty();
        $.getJSON('/Login/GetStreet?did=' + $('#District_ID').val(), function (json) {
            $('#Street_ID').select2({ data: json });
        });

    });
    </script>
}